/* login.module.css */

/* 
  Ensure your global CSS variables are accessible.
  If not directly via :root, you might need to import them if your setup allows,
  or redefine them here. For now, I'll assume they are globally available.
  Example:
  :root {
    --primary-color: #00b894;
    --primary-color-darker: #019875;
    --text-color-dark: #2c3e50;
    --text-color-medium: #555e68;
    --text-color-light: #f8f9fa;
    --bg-light: #f8f9fa;
    --bg-white: #ffffff;
    --border-color: #e0e0e0;
    --shadow-soft: 0 4px 15px rgba(0, 0, 0, 0.08);
    --shadow-medium: 0 8px 25px rgba(0, 0, 0, 0.1);
    --border-radius-sm: 6px;
    --border-radius-md: 10px;
    --font-primary: 'Poppins', 'Arial', sans-serif;
    --font-secondary: 'Roboto', 'Arial', sans-serif;
    --transition-speed: 0.3s;
  }
*/

.loginPageWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: var(--bg-light, #f0f2f5); /* A common light grey for auth pages */
  padding: 20px; /* Padding for smaller screens, card will have its own */
  font-family: var(--font-secondary, 'Roboto', sans-serif);
}

.loginFormCard {
  background-color: var(--bg-white, #ffffff);
  padding: 30px 35px; /* Generous padding */
  border-radius: var(--border-radius-md, 12px); /* Slightly larger radius for a card */
  box-shadow: var(--shadow-medium, 0 10px 30px rgba(0, 0, 0, 0.1));
  width: 100%;
  max-width: 420px; /* Control max width of the login card */
  text-align: center; /* Center logo and titles */
  margin-top: 65px;
}

.logoContainer {
  margin-bottom: 1.5rem;
}

.logoImg {
  max-width: 140px; /* Adjust as needed */
  height: auto;
  align-items: center;
  margin-left: 100px;
}

.formTitle {
  font-family: var(--font-primary, 'Poppins', sans-serif);
  font-size: clamp(1.7rem, 5vw, 2.1rem);
  color: var(--text-color-dark, #2c3e50);
  margin-bottom: 8px;
  font-weight: 600;
}

.formSubtitle {
  color: var(--text-color-medium, #555e68);
  margin-bottom: 2rem;
  font-size: 0.95rem;
  line-height: 1.5;
}

.formGroup {
  margin-bottom: 1.25rem;
  text-align: left; /* Align labels and inputs to the left */
}

.formGroup label {
  display: block;
  font-weight: 500;
  color: var(--text-color-dark, #333);
  margin-bottom: 8px;
  font-size: 0.9rem;
}

.inputField,
.selectField {
  width: 100%;
  padding: 12px 15px;
  border: 1px solid var(--border-color, #d1d5db); /* Slightly softer border */
  border-radius: var(--border-radius-sm, 6px);
  font-size: 0.95rem;
  color: var(--text-color-dark, #333);
  background-color: var(--bg-white, #ffffff);
  transition: border-color var(--transition-speed, 0.3s) ease, box-shadow var(--transition-speed, 0.3s) ease;
  appearance: none; /* Remove default styling for select */
  -webkit-appearance: none;
  -moz-appearance: none;
}

.inputField::placeholder {
  color: var(--text-color-medium, #9ca3af);
  opacity: 1;
}

.inputField:focus,
.selectField:focus {
  outline: none;
  border-color: var(--primary-color, #00b894);
  box-shadow: 0 0 0 3px rgba(0, 184, 148, 0.2); /* Focus ring with primary color */
}

.selectField {
  /* Custom arrow for select dropdown */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236B7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.7rem center;
  background-size: 1.2em;
  padding-right: 2.8rem; /* Make space for the arrow */
}

.formOptions {
  text-align: right; /* Aligns "Forgot Password" to the right */
  margin-bottom: 1.5rem;
  margin-top: -0.5rem; /* Pull it up slightly */
}

.forgotPasswordLink {
  color: var(--primary-color, #00b894);
  font-size: 0.875rem;
  text-decoration: none;
  font-weight: 500;
}

.forgotPasswordLink:hover {
  text-decoration: underline;
  color: var(--primary-color-darker, #019875);
}

/* Button Styling - Define base and primary within the module or use :global */
/* This is a way to define themed buttons within CSS Modules */
.btnBase { /* If you want a more generic base for other buttons in this module */
  padding: 12px 20px;
  border: none;
  border-radius: var(--border-radius-sm, 6px);
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
  transition: background-color var(--transition-speed, 0.3s) ease, transform var(--transition-speed, 0.3s) ease;
  text-align: center;
  width: 100%; /* Make buttons full width by default here */
  line-height: 1.5;
}

.btnPrimary {
  /* composes: btnBase; /* If btnBase is defined and you want to inherit */
  /* Or define all properties if not composing: */
  padding: 12px 20px;
  border: none;
  border-radius: var(--border-radius-sm, 6px);
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
  transition: background-color var(--transition-speed, 0.3s) ease, transform var(--transition-speed, 0.3s) ease;
  text-align: center;
  width: 100%;
  line-height: 1.5;
  /* Primary specific styles */
  background-color: var(--primary-color, #00b894);
  color: var(--text-color-light, #ffffff);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.btnPrimary:hover {
  background-color: var(--primary-color-darker, #019875);
  transform: translateY(-1px);
}

.submitButton {
  /* This class is already combined with btnPrimary in JSX: className={${styles.submitButton} ${styles.btnPrimary}} */
  /* So, .btnPrimary styles will apply. Add any specific overrides for submitButton here if needed. */
  /* For example, if you wanted a different margin: */
  margin-top: 0.5rem; /* Adjusted from default .btnBase if it had margin */
}

.submitButton:disabled {
  background-color: var(--text-color-medium, #9ca3af);
  border-color: var(--text-color-medium, #9ca3af); /* If it had a border */
  color: var(--bg-light, #e5e7eb);
  cursor: not-allowed;
  transform: none;
  opacity: 0.7;
}

.alternativeAction {
  text-align: center;
  margin-top: 1.75rem;
  color: var(--text-color-medium, #555e68);
  font-size: 0.9rem;
}

.linkStyled {
  color: var(--primary-color, #00b894);
  font-weight: 600;
  cursor: pointer;
  text-decoration: none;
}

.linkStyled:hover,
.linkStyled:focus {
  color: var(--primary-color-darker, #019875);
  text-decoration: underline;
  outline: none;
}

.errorMessage {
  background-color: rgba(239, 68, 68, 0.1); /* Tailwind's red-100 like */
  color: rgba(185, 28, 28, 1); /* Tailwind's red-700 like */
  padding: 10px 15px;
  border-radius: var(--border-radius-sm, 6px);
  text-align: center;
  margin-bottom: 1.5rem;
  font-size: 0.875rem;
  border: 1px solid rgba(239, 68, 68, 0.3);
}

/* Responsive Adjustments */
@media (max-width: 480px) { /* Small mobile screens */
  .loginFormCard {
    padding: 25px 20px; /* Reduce padding on very small screens */
    margin: 10px; /* Ensure some space from screen edges */
  }

  .formTitle {
    font-size: 1.5rem;
  }

  .formSubtitle {
    font-size: 0.9rem;
    margin-bottom: 1.5rem;
  }

  .inputField,
  .selectField {
    padding: 10px 12px;
    font-size: 0.9rem;
  }
  .selectField {
    padding-right: 2.5rem;
  }

  .btnPrimary, .submitButton { /* Target both since submitButton uses btnPrimary */
    font-size: 0.9rem;
    padding: 10px 15px;
  }
}